{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","enums/StatusFilterSelect.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selTodo","modal","onModal","className","map","todo","id","completed","title","type","onClick","TodoFilter","filterByQuery","setFilterByQuery","filterBySelect","setFilterBySelect","onSubmit","e","preventDefault","value","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","StatusFilterSelect","TodoModal","useState","loadingModal","setLoadingModal","user","setUser","useEffect","userId","finally","href","email","name","App","setTodos","loading","setLoading","selectedTodo","setSelectedTodo","openModal","setOpenModal","errorMessageTodos","setErrorMessageTodos","catch","filterTodos","useMemo","filteredByTodos","filter","ALL","ACTIVE","COMPLETED","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5667975.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selTodo: (todo: Todo | null) => void,\n  modal: boolean,\n  onModal: (op: boolean) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selTodo,\n  modal,\n  onModal,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={\n              modal ? 'has-background-info-light' : ''\n            }\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {\n                todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )\n              }\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  selTodo(todo);\n                  onModal(true);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={modal ? 'far fa-eye-slash' : 'far fa-eye'} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","type Props = {\n  filterByQuery: string,\n  setFilterByQuery: (s: string) => void,\n  filterBySelect: string,\n  setFilterBySelect: (s: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterByQuery,\n  setFilterByQuery,\n  filterBySelect,\n  setFilterBySelect,\n}) => {\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={handleSubmit}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBySelect}\n            onChange={(e) => setFilterBySelect(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterByQuery}\n          onChange={(e) => {\n            setFilterByQuery(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {\n            filterByQuery && (\n              /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setFilterByQuery('')}\n              />\n            )\n          }\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const getUser = (userId: any) => get<User>(`/users/${userId}`);\n","export enum StatusFilterSelect {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo | null,\n  onModal: (op: boolean) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onModal }) => {\n  const [loadingModal, setLoadingModal] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setLoadingModal(true);\n\n    getUser(todo?.userId).then(setUser).finally(() => setLoadingModal(false));\n  }, [todo?.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadingModal ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onModal(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { StatusFilterSelect } from './enums/StatusFilterSelect';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [openModal, setOpenModal] = useState(false);\n  const [errorMessageTodos, setErrorMessageTodos] = useState('');\n\n  const [filterByQuery, setFilterByQuery] = useState('');\n  const [filterBySelect, setFilterBySelect] = useState('all');\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos().then(setTodos).catch(() => {\n      setErrorMessageTodos('Todos loading error! Try again!');\n    }).finally(() => setLoading(false));\n  }, []);\n\n  const filterTodos = useMemo(() => {\n    const filteredByTodos = todos.filter((todo) => {\n      const { completed } = todo;\n\n      switch (filterBySelect) {\n        case StatusFilterSelect.ALL: return true;\n        case StatusFilterSelect.ACTIVE: return !completed;\n        case StatusFilterSelect.COMPLETED: return completed;\n        default: return true;\n      }\n    });\n\n    const filteredByQueryTodos = filterByQuery\n      ? filteredByTodos.filter((todo) => todo.title\n        .toLowerCase().includes(filterByQuery.toLowerCase())) : filteredByTodos;\n\n    return filteredByQueryTodos;\n  }, [filterByQuery, filterBySelect, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterByQuery={filterByQuery}\n                setFilterByQuery={setFilterByQuery}\n                filterBySelect={filterBySelect}\n                setFilterBySelect={setFilterBySelect}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                loading && (\n                  <Loader />\n                )\n              }\n\n              {!loading && !errorMessageTodos && todos.length > 0 ? (\n                <TodoList\n                  todos={filterTodos}\n                  selTodo={setSelectedTodo}\n                  modal={openModal}\n                  onModal={setOpenModal}\n                />\n              ) : (\n                <p className=\"has-text-danger\">{errorMessageTodos}</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {openModal && (\n        <TodoModal\n          todo={selectedTodo}\n          onModal={setOpenModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}